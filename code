from web3 import Web3

# Connect to an Ethereum node
w3 = Web3(Web3.HTTPProvider("http://localhost:8545"))

# Set the account that will deploy the contract
w3.eth.defaultAccount = "YOUR_ACCOUNT_ADDRESS"

# Read the contract bytecode from a file
with open("token.bin", "r") as f:
    bytecode = f.read()

# Set the contract's constructor arguments
contract_args = [
    "My Token",
    "MTK",
    18,
    100000000
]

# Estimate the gas needed to deploy the contract
gas_estimate = w3.eth.estimateGas({"data": bytecode, "from": w3.eth.defaultAccount})

# Build the contract deployment transaction
transaction = {
    "nonce": w3.eth.getTransactionCount(w3.eth.defaultAccount),
    "gasPrice": w3.eth.gasPrice,
    "gas": gas_estimate,
    "data": bytecode,
    "from": w3.eth.defaultAccount
}

# Sign the transaction
signed_transaction = w3.eth.account.signTransaction(transaction, "YOUR_PRIVATE_KEY")

# Send the transaction
tx_hash = w3.eth.sendRawTransaction(signed_transaction.rawTransaction)

# Wait for the transaction to be mined
tx_receipt = w3.eth.waitForTransactionReceipt(tx_hash)

# Print the contract address
print("Token contract deployed at:", tx_receipt["contractAddress"])
